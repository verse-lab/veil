name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      run: |
        mkdir .veil.tmp && cp -r * .veil.tmp 
        zip -r veil.zip .veil.tmp && docker build --platform=linux/amd64 -t veil/latest .
        docker image save veil/latest | gzip > veil.tar.gz
        
    - name: List Docker images
      run: docker images

    - name: Start container (in background)
      run: docker run --name test-container -dti veil/latest

    - name: Execute lake build
      id: run-container
      run: |
        set +e # stop this script from aborting if a command fails, s.t., the exit code can be captured
        docker exec test-container bash -c 'cd veil && /root/.elan/bin/lake build || exit $?'
        echo "exitcode=$?" >> $GITHUB_OUTPUT

    - name: Stop container and cleanup docker
      if: ${{ always() }}
      run: |
        docker stop test-container
        docker rm test-container

    - name: Report exit code
      if: ${{ steps.run-container.outcome == 'failure' }}
      run: echo "The lake build process exited with the non-zero exit code ${{ steps.run-container.outputs.exitcode }}."
